configfile: "config.yaml"

DATASETS = [
    "gfp-brightness",
    "laci-ec50",
    "laci-ginf",
    "laci-joint",
    "covid-exp",
    "covid-bind",
    "covid-joint",
]

TORCH_MODELS = [
    "lantern",
    "feedforward-K1-D1-W32",
    "feedforward-K8-D1-W32",
]

MODELS = TORCH_MODELS + ["globalep"]


include: "smk/data.smk"
include: "smk/lantern.smk"
include: "smk/feedforward.smk"
include: "smk/globalep.smk"

import util
import matplotlib.pyplot as plt
import matplotlib as mpl

include: "smk/figures/cvr2.smk"
include: "smk/figures/calibration.smk"
include: "smk/figures/surface.smk"

rule data:
    input:
        expand("data/processed/{ds}.pkl", ds=DATASETS)

rule train_ge:
    """
    Generate models (warning: computation intensive!)
    """
    input:
        expand("experiments/{dataset}/globalep/cv{cv}/model.pkl", cv=range(10), dataset=DATASETS),

rule train_ff:
    """
    Generate models (warning: computation intensive!)
    """
    input:
        expand("experiments/{dataset}/{model}/cv{cv}/model.pt", cv=range(10), model=["feedforward-K1-D1-W32", "feedforward-K8-D1-W32",], dataset=DATASETS),

rule train_torch:
    """
    Generate torch-based models (warning: computation intensive!)
    """
    input:
        expand("experiments/{dataset}/{model}/cv{cv}/model.pt", cv=range(10), model=TORCH_MODELS, dataset=DATASETS),
        expand("experiments/{dataset}/lantern/full/model.pt", dataset=["gfp-brightness", "laci-joint", "covid-joint"]),
        expand("experiments/{dataset}/lantern/cv{cv}-n5000/model.pt", dataset=DATASETS, cv=range(10)),

    

rule train:
    """
    Generate models (warning: computation intensive!)
    """
    input:
        expand("experiments/{dataset}/{model}/cv{cv}/model.pt", cv=range(10), model=TORCH_MODELS, dataset=DATASETS),
        expand("experiments/{dataset}/globalep/cv{cv}/model.pkl", cv=range(10), dataset=DATASETS),

rule predict_torch:
    """
    Generate model predictions
    """
    input:
        expand("experiments/{dataset}/{model}/cv{cv}/pred-val.csv", cv=range(10), model=TORCH_MODELS, dataset=DATASETS),

rule predict_ge:
    """
    Generate model predictions
    """
    input:
        expand("experiments/{dataset}/globalep/cv{cv}/pred-val.csv", cv=range(10), dataset=DATASETS)

rule predict:
    """
    Generate model predictions
    """
    input:
        expand("experiments/{dataset}/{model}/cv{cv}/pred-val.csv", cv=range(10), model=MODELS, dataset=DATASETS),

rule figures:
    """
    Generate figures for the manuscript.
    """
    input:
        "figures/cvr2.png",
        #"figures/gfp/surface.png",
        # expand("figures/{ds}/{model}/cv-calibration.png", model=MODELS, ds=DATASETS)
        "figures/laci-joint/ec50/surface.png",
        "figures/laci-joint/ginf/surface.png",
        "figures/covid-joint/exp/surface.png",
        "figures/covid-joint/bind/surface.png",
        "figures/gfp-brightness/brightness/surface.png",

    shell:
        "tar -czf figures.tar.gz figures/*"

rule help:
    """
    Print list of all targets with help.
    """
    run:
        for rule in workflow.rules:
            print(rule.name)
            print(rule.docstring)
